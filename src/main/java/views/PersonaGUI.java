/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import org.example.domain.Persona;
import org.example.repository.PersonaRepository;
import utils.Utils;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author クリス
 */
public class PersonaGUI extends javax.swing.JFrame {
    private Boolean isCreate;

    /**
     * Creates new form PersonaGUI
     */
    public PersonaGUI() {
        this.isCreate = true;
        initComponents();
        loadData();
        btnSave.setText("Guardar");
        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = jTable1.getSelectedRow();
                if (selectedRow != -1) { // Verificar que haya una fila seleccionada
                    // Llenar los campos de entrada con los valores de la fila seleccionada
                    txtCUI.setText(jTable1.getValueAt(selectedRow, 0).toString());
                    txtNombres.setText(jTable1.getValueAt(selectedRow, 1).toString());
                    txtApellidos.setText(jTable1.getValueAt(selectedRow, 2).toString());
                    txtDomicilio.setText(jTable1.getValueAt(selectedRow, 3).toString());
                    txtCelular.setText(jTable1.getValueAt(selectedRow, 4).toString());
                    txtNit.setText(jTable1.getValueAt(selectedRow, 5).toString());
                    String dateString = jTable1.getValueAt(selectedRow, 6).toString();

                    var originalFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    var desiredFormat = new SimpleDateFormat("dd/MM/yyyy");

                    try {
                        var date = originalFormat.parse(dateString);
                        String formattedDate = desiredFormat.format(date);
                        txtFechaNacimiento.setText(formattedDate);
                    } catch (ParseException error) {
                        error.printStackTrace();
                    }
                }
            }
        });
    }
    
    public PersonaGUI(Boolean isCreate) {
        this.isCreate = isCreate;

        initComponents();
        loadData();
        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = jTable1.getSelectedRow();
                if (selectedRow != -1) { // Verificar que haya una fila seleccionada
                    // Llenar los campos de entrada con los valores de la fila seleccionada
                    txtCUI.setText(jTable1.getValueAt(selectedRow, 0).toString());
                    txtNombres.setText(jTable1.getValueAt(selectedRow, 1).toString());
                    txtApellidos.setText(jTable1.getValueAt(selectedRow, 2).toString());
                    txtDomicilio.setText(jTable1.getValueAt(selectedRow, 3).toString());
                    txtCelular.setText(jTable1.getValueAt(selectedRow, 4).toString());
                    txtNit.setText(jTable1.getValueAt(selectedRow, 5).toString());
                    String dateString = jTable1.getValueAt(selectedRow, 6).toString();

                    var originalFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    var desiredFormat = new SimpleDateFormat("dd/MM/yyyy");

                    try {
                        var date = originalFormat.parse(dateString);
                        String formattedDate = desiredFormat.format(date);
                        txtFechaNacimiento.setText(formattedDate);
                    } catch (ParseException error) {
                        error.printStackTrace();
                    }
                }
            }
        });
        if (this.isCreate) {
            btnSave.setText("Guardar");
        } else {
            btnSave.setText("Actualizar");
            txtCUI.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCUI = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtDomicilio = new javax.swing.JTextField();
        txtCelular = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtFechaNacimiento = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("CUI:");

        jLabel2.setText("Nombres:");

        jLabel3.setText("Apellidos:");

        jLabel4.setText("Domicilio:");

        jLabel5.setText("Celular:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnSave.setText("Guardar");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel6.setText("Nit:");

        jLabel7.setText("Fecha Nacimiento:");

        txtFechaNacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaNacimientoActionPerformed(evt);
            }
        });

        jButton1.setText("Eliminar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(591, 591, 591)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCUI, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(89, 89, 89)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 43, 43)
                                        .addComponent(jLabel7)
                                        .addGap(35, 35, 35)
                                        .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(txtCUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(jButton1))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        // TODO add your handling code here:
        var cui = txtCUI.getText();
        var nombres = txtNombres.getText();
        var apellidos = txtApellidos.getText();
        var domicilio = txtDomicilio.getText();
        var celular = txtCelular.getText();
        var nit = txtNit.getText();
        var fechaNacimiento = txtFechaNacimiento.getText();

        if (nombres.isEmpty() || apellidos.isEmpty() || domicilio.isEmpty() || celular.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!Utils.isValidDPI(cui)) {
            JOptionPane.showMessageDialog(null, "El CUI ingresado no es válido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!Utils.celIsValid(celular)) {
            JOptionPane.showMessageDialog(null, "El número de celular ingresado no es válido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

//        if (!Utils.validarNITMod11(nit)) {
//            JOptionPane.showMessageDialog(null, "El NIT ingresado no es válido", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }

        if (Utils.convertirStringADate(fechaNacimiento) == null) {
            JOptionPane.showMessageDialog(null, "La fecha de nacimiento ingresada no es válida", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        var persona = new Persona();
        persona.setCui(Long.parseLong(cui));
        persona.setNombres(nombres);
        persona.setApellidos(apellidos);
        persona.setDomicilio(domicilio);
        persona.setCel(celular);
        persona.setNit(nit);
        persona.setFechaNacimiento(fechaNacimiento);

        try {
            var repository = new PersonaRepository();
            if (isCreate) {
                repository.save(persona);
            } else {
                repository.update(persona);
            }
            loadData();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Ocurrió un error al guardar la persona", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSaveMouseClicked

    private void loadData() {
        try {
            var repository = new PersonaRepository();
            var personas = repository.readAll();

            var columnNames = new String[]{"CUI", "Nombres", "Apellidos", "Domicilio", "Celular", "NIT", "Fecha Nacimiento"};
            var model = new DefaultTableModel(columnNames, 0);

            for (var persona : personas) {
                var row = new Object[]{persona.getCui(), persona.getNombres(), persona.getApellidos(), persona.getDomicilio(), persona.getCel(), persona.getNit(), persona.getFechaNacimiento()};
                model.addRow(row);
            }
            jTable1.setModel(model);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Ocurrió un error al cargar los datos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void txtFechaNacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaNacimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaNacimientoActionPerformed

    private void clean() {
        txtCUI.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtDomicilio.setText("");
        txtCelular.setText("");
        txtNit.setText("");
        txtFechaNacimiento.setText("");
    }
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            var cui = txtCUI.getText();
            if (cui.isEmpty()) {
                JOptionPane.showMessageDialog(null, "El campo CUI es requerido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!Utils.isValidDPI(cui)) {
                JOptionPane.showMessageDialog(null, "El CUI ingresado no es válido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            var repository = new PersonaRepository();
            var persona = new Persona();
            persona.setCui(Long.parseLong(cui));
            repository.delete(persona);
            loadData();
            clean();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Ocurrió un error al eliminar la persona", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCUI;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtDomicilio;
    private javax.swing.JTextField txtFechaNacimiento;
    private javax.swing.JTextField txtNit;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
